객체지향
1. 존재하면 쓸수 있다, 존재하지 않으면 쓸 수 없다
2. 접근할 수 있으면 쓸 수 있고, 접근할 수 없으면 쓸 수 없다(접근할 수 있다면 존재하는것)
*1.데이터가 힙, static영역에 존재해야 존재

클래스 - 파이썬은 덕타이핑언어
	객체와 인스턴스는 "비슷한" 개념
	객체는 인스턴스를 포함하는 의미
	클래스를 통해 찍어낸 객체를 인스턴스라고 한다 why? 클래스 관점으로 보면 클래스를 통해서 만들어진 인스턴스, 스스로를 보면 객체
	인스턴스? <-- 클래스를 찾아라 무조건 있다. 어떤 클래스의 객체인지를 나타내는 것 

생성자 - 객체를 초기화한다/ 초기자라고도 함

메서드 - 수학의 함수(함수와 똑같은 형태) input값: 매개변수, 인자 과 return값: 리턴값  *클래스안에 선언된 함수 = 매세드
 	선언방식은 함수와 같다. 인스턴스 
	미리 구성하는 logic, 동일로직 반복사용에 활용 

맴버 - (field, logic) class내부에서 존재하는 요소를 말한다
	인스턴스 맴버: 위치하고 있는 장소 = 인스턴스 내부에 존재, 객체 내부에 존재한다. (인스턴스를 만들어야만 존재)
		클래스 맴버는 내부에 따로 존재하도록 되어있다
	정적 맴버/클래스맴버: 클래스가 선언될때 만들어짐, 접근하려고 하면 경로가 클래스에 남아있다(인스턴스가 만들어지기 전에 이미 존재-->따라서 사용가능)
			선언할때, self(인스턴스 자체를 지칭하는것) 제외

class A:
    s_n = "" #field  
    def __init__(self):
        self.v = 0
    def i_m(self):
        print("im going")
    
a = A()
b = A()